<?php
<?php
// robust require path
require_once __DIR__ . '/../connect.php';

function insertData($table, $data) {
    global $conn;

    if (empty($data) || !is_array($data)) return false;

    $columns = implode(", ", array_keys($data));
    $placeholders = implode(", ", array_fill(0, count($data), "?"));
    $types = str_repeat("s", count($data)); // simple assumption: all strings

    $stmt = $conn->prepare("INSERT INTO `$table` ($columns) VALUES ($placeholders)");
    if (!$stmt) {
        return false;
    }
    $values = array_values($data);
    $stmt->bind_param($types, ...$values);
    $ok = $stmt->execute();
    $stmt->close();
    return $ok;
}

function updateData($table, $data, $id) {
    global $conn;

    if (empty($data) || !is_array($data)) return false;

    $setClause = implode(", ", array_map(fn($col) => "$col = ?", array_keys($data)));
    $types = str_repeat("s", count($data)) . "i"; // id is integer

    $stmt = $conn->prepare("UPDATE `$table` SET $setClause WHERE id = ?");
    if (!$stmt) {
        return false;
    }
    $values = array_merge(array_values($data), [$id]);
    $stmt->bind_param($types, ...$values);
    $ok = $stmt->execute();
    $stmt->close();
    return $ok;
}

function renderModal($id, $title, $action, $fields = []) {
  ?>
  <div id="<?= htmlspecialchars($id) ?>" class="fixed inset-0 hidden z-50 bg-black bg-opacity-50 flex items-center justify-center" role="dialog" aria-modal="true" aria-labelledby="<?= htmlspecialchars($id) ?>-title" tabindex="-1">
    <div class="relative bg-white rounded-2xl shadow-lg w-full max-w-lg mx-4 border border-gray-200">
      <div class="p-6">
        <div id="<?= htmlspecialchars($id) ?>-title" class="mb-4 text-lg font-semibold text-[#0b2340]">
          <?= htmlspecialchars($title) ?>
        </div>

        <form id="<?= htmlspecialchars($id) ?>-form" method="POST" action="<?= htmlspecialchars($action) ?>" class="space-y-4">
          <?php foreach ($fields as $field):
            $name  = htmlspecialchars($field['name'] ?? '');
            $type  = $field['type'] ?? 'text';
            $label = htmlspecialchars($field['label'] ?? ucfirst($name));
            $opts  = $field['options'] ?? null;
          ?>
            <div>
              <label for="<?= $name ?>" class="block text-sm font-medium text-gray-700 mb-1"><?= $label ?></label>

              <?php if ($opts && is_array($opts)): ?>
                <select id="<?= $name ?>" name="<?= $name ?>" required
                        class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 bg-white focus:outline-none focus:ring-2 focus:ring-[#0b63d6] focus:border-[#0b63d6]">
                  <option value=""><?= $field['placeholder'] ?? '-- Pilih --' ?></option>
                  <?php foreach ($opts as $val => $lab): ?>
                    <option value="<?= htmlspecialchars($val) ?>"><?= htmlspecialchars($lab) ?></option>
                  <?php endforeach; ?>
                </select>

              <?php elseif ($type === 'textarea'): ?>
                <textarea id="<?= $name ?>" name="<?= $name ?>" rows="4" required
                          class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#0b63d6] focus:border-[#0b63d6]"></textarea>

              <?php else: ?>
                <input
                  type="<?= htmlspecialchars($type) ?>"
                  id="<?= $name ?>"
                  name="<?= $name ?>"
                  required
                  class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#0b63d6] focus:border-[#0b63d6]"
                />
              <?php endif; ?>
            </div>
          <?php endforeach; ?>

          <div class="flex items-center justify-end gap-3 pt-2">
            <button type="button" class="closeModal px-4 py-2 rounded-md bg-gray-200 text-gray-700 hover:bg-gray-300">Batal</button>
            <button type="submit" class="px-4 py-2 rounded-md bg-[#0b63d6] text-white hover:bg-[#094fb3]">Simpan</button>
          </div>
        </form>
      </div>

      <button type="button" aria-label="Tutup" class="absolute top-3 right-3 text-gray-500 hover:text-gray-700 p-1 rounded-full closeModal">
        <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
  </div>

  <script>
    (function(){
      const modal = document.getElementById('<?= addslashes($id) ?>');
      if (!modal) return;

      // close buttons
      modal.querySelectorAll('.closeModal').forEach(btn => {
        btn.addEventListener('click', () => modal.classList.add('hidden'));
      });

      // overlay click closes
      modal.addEventListener('click', (e) => {
        if (e.target === modal) modal.classList.add('hidden');
      });

      // Esc closes (single global listener)
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && !modal.classList.contains('hidden')) modal.classList.add('hidden');
      });
    })();
  </script>
  <?php
}

function renderTable(string $table, array $columns, string $title = '') {
    global $conn;

    $colsList = implode(", ", array_map(fn($c) => "`$c`", $columns));
    $sql = "SELECT $colsList FROM `$table` WHERE deleted_at IS NULL";
    $res = $conn->query($sql);
    if (!$res) {
        echo "<p class='text-red-600'>Gagal mengambil data: " . htmlspecialchars($conn->error) . "</p>";
        return;
    }

    echo '<div class="mt-6">';
    if ($title !== '') {
        echo "<h3 class='text-lg font-semibold mb-3'>" . htmlspecialchars($title) . "</h3>";
    }
    echo '<div class="overflow-x-auto bg-white rounded-md shadow-sm border border-gray-200">';
    echo '<table class="min-w-full divide-y divide-gray-200">';
    echo '<thead class="bg-gray-50">';
    echo '<tr>';
    foreach ($columns as $col) {
        echo '<th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">' . htmlspecialchars($col) . '</th>';
    }
    echo '<th class="px-4 py-2 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>';
    echo '</tr>';
    echo '</thead>';
    echo '<tbody class="bg-white divide-y divide-gray-200">';
    while ($row = $res->fetch_assoc()) {
        echo '<tr>';
        foreach ($columns as $col) {
            $val = $row[$col] ?? '';
            echo '<td class="px-4 py-3 whitespace-nowrap text-sm text-gray-700">' . htmlspecialchars((string)$val) . '</td>';
        }
        // action buttons (edit/delete hooks)
        $id = $row['id'] ?? '';
        echo '<td class="px-4 py-3 whitespace-nowrap text-sm text-right">';
        echo '<button data-id="'.htmlspecialchars($id).'" class="editBtn inline-flex items-center px-3 py-1 mr-2 text-sm bg-yellow-100 text-yellow-800 rounded">Edit</button>';
        echo '<button data-id="'.htmlspecialchars($id).'" class="deleteBtn inline-flex items-center px-3 py-1 text-sm bg-red-100 text-red-800 rounded">Delete</button>';
        echo '</td>';

        echo '</tr>';
    }
    echo '</tbody>';
    echo '</table>';
    echo '</div>';
    echo '</div>';

    $res->free();
}
?>
```// filepath: /media/orange/1TB/document/programming/php/src/php-web-smkti/components/form.php
<?php
// robust require path
require_once __DIR__ . '/../connect.php';

function insertData($table, $data) {
    global $conn;

    if (empty($data) || !is_array($data)) return false;

    $columns = implode(", ", array_keys($data));
    $placeholders = implode(", ", array_fill(0, count($data), "?"));
    $types = str_repeat("s", count($data)); // simple assumption: all strings

    $stmt = $conn->prepare("INSERT INTO `$table` ($columns) VALUES ($placeholders)");
    if (!$stmt) {
        return false;
    }
    $values = array_values($data);
    $stmt->bind_param($types, ...$values);
    $ok = $stmt->execute();
    $stmt->close();
    return $ok;
}

function updateData($table, $data, $id) {
    global $conn;

    if (empty($data) || !is_array($data)) return false;

    $setClause = implode(", ", array_map(fn($col) => "$col = ?", array_keys($data)));
    $types = str_repeat("s", count($data)) . "i"; // id is integer

    $stmt = $conn->prepare("UPDATE `$table` SET $setClause WHERE id = ?");
    if (!$stmt) {
        return false;
    }
    $values = array_merge(array_values($data), [$id]);
    $stmt->bind_param($types, ...$values);
    $ok = $stmt->execute();
    $stmt->close();
    return $ok;
}

function renderModal($id, $title, $action, $fields = []) {
  ?>
  <div id="<?= htmlspecialchars($id) ?>" class="fixed inset-0 hidden z-50 bg-black bg-opacity-50 flex items-center justify-center" role="dialog" aria-modal="true" aria-labelledby="<?= htmlspecialchars($id) ?>-title" tabindex="-1">
    <div class="relative bg-white rounded-2xl shadow-lg w-full max-w-lg mx-4 border border-gray-200">
      <div class="p-6">
        <div id="<?= htmlspecialchars($id) ?>-title" class="mb-4 text-lg font-semibold text-[#0b2340]">
          <?= htmlspecialchars($title) ?>
        </div>

        <form id="<?= htmlspecialchars($id) ?>-form" method="POST" action="<?= htmlspecialchars($action) ?>" class="space-y-4">
          <?php foreach ($fields as $field):
            $name  = htmlspecialchars($field['name'] ?? '');
            $type  = $field['type'] ?? 'text';
            $label = htmlspecialchars($field['label'] ?? ucfirst($name));
            $opts  = $field['options'] ?? null;
          ?>
            <div>
              <label for="<?= $name ?>" class="block text-sm font-medium text-gray-700 mb-1"><?= $label ?></label>

              <?php if ($opts && is_array($opts)): ?>
                <select id="<?= $name ?>" name="<?= $name ?>" required
                        class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 bg-white focus:outline-none focus:ring-2 focus:ring-[#0b63d6] focus:border-[#0b63d6]">
                  <option value=""><?= $field['placeholder'] ?? '-- Pilih --' ?></option>
                  <?php foreach ($opts as $val => $lab): ?>
                    <option value="<?= htmlspecialchars($val) ?>"><?= htmlspecialchars($lab) ?></option>
                  <?php endforeach; ?>
                </select>

              <?php elseif ($type === 'textarea'): ?>
                <textarea id="<?= $name ?>" name="<?= $name ?>" rows="4" required
                          class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#0b63d6] focus:border-[#0b63d6]"></textarea>

              <?php else: ?>
                <input
                  type="<?= htmlspecialchars($type) ?>"
                  id="<?= $name ?>"
                  name="<?= $name ?>"
                  required
                  class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#0b63d6] focus:border-[#0b63d6]"
                />
              <?php endif; ?>
            </div>
          <?php endforeach; ?>

          <div class="flex items-center justify-end gap-3 pt-2">
            <button type="button" class="closeModal px-4 py-2 rounded-md bg-gray-200 text-gray-700 hover:bg-gray-300">Batal</button>
            <button type="submit" class="px-4 py-2 rounded-md bg-[#0b63d6] text-white hover:bg-[#094fb3]">Simpan</button>
          </div>
        </form>
      </div>

      <button type="button" aria-label="Tutup" class="absolute top-3 right-3 text-gray-500 hover:text-gray-700 p-1 rounded-full closeModal">
        <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
  </div>

  <script>
    (function(){
      const modal = document.getElementById('<?= addslashes($id) ?>');
      if (!modal) return;

      // close buttons
      modal.querySelectorAll('.closeModal').forEach(btn => {
        btn.addEventListener('click', () => modal.classList.add('hidden'));
      });

      // overlay click closes
      modal.addEventListener('click', (e) => {
        if (e.target === modal) modal.classList.add('hidden');
      });

      // Esc closes (single global listener)
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && !modal.classList.contains('hidden')) modal.classList.add('hidden');
      });
    })();
  </script>
  <?php
}

function renderTable(string $table, array $columns, string $title = '') {
    global $conn;

    $colsList = implode(", ", array_map(fn($c) => "`$c`", $columns));
    $sql = "SELECT $colsList FROM `$table` WHERE deleted_at IS NULL";
    $res = $conn->query($sql);
    if (!$res) {
        echo "<p class='text-red-600'>Gagal mengambil data: " . htmlspecialchars($conn->error) . "</p>";
        return;
    }

    echo '<div class="mt-6">';
    if ($title !== '') {
        echo "<h3 class='text-lg font-semibold mb-3'>" . htmlspecialchars($title) . "</h3>";
    }
    echo '<div class="overflow-x-auto bg-white rounded-md shadow-sm border border-gray-200">';
    echo '<table class="min-w-full divide-y divide-gray-200">';
    echo '<thead class="bg-gray-50">';
    echo '<tr>';
    foreach ($columns as $col) {
        echo '<th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">' . htmlspecialchars($col) . '</th>';
    }
    echo '<th class="px-4 py-2 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>';
    echo '</tr>';
    echo '</thead>';
    echo '<tbody class="bg-white divide-y divide-gray-200">';
    while ($row = $res->fetch_assoc()) {
        echo '<tr>';
        foreach ($columns as $col) {
            $val = $row[$col] ?? '';
            echo '<td class="px-4 py-3 whitespace-nowrap text-sm text-gray-700">' . htmlspecialchars((string)$val) . '</td>';
        }
        // action buttons (edit/delete hooks)
        $id = $row['id'] ?? '';
        echo '<td class="px-4 py-3 whitespace-nowrap text-sm text-right">';
        echo '<button data-id="'.htmlspecialchars($id).'" class="editBtn inline-flex items-center px-3 py-1 mr-2 text-sm bg-yellow-100 text-yellow-800 rounded">Edit</button>';
        echo '<button data-id="'.htmlspecialchars($id).'" class="deleteBtn inline-flex items-center px-3 py-1 text-sm bg-red-100 text-red-800 rounded">Delete</button>';
        echo '</td>';

        echo '</tr>';
    }
    echo '</tbody>';
    echo '</table>';
    echo '</div>';
    echo '</div>';

    $res->free();
}
?>